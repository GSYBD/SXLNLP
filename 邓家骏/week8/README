目标：
用表示型做文本匹配。
将已有代码改成triplet loss 的形式训练
    实际要改的部分：
        1. loader的getitem
        2. model的loss计算方式
        3. model的forward

addition:
实现编辑距离  已完成



疑惑：
loader.py
    1.本来loader怎么读数据的，直接读整个文本？
    A. 刚看了，是一口气读进内存，然后再构建正负样本（？）

    2.通过读取文本的数据结构类型判断，是训练数据还是测试数据

model.py
    像是设计了两个模型，一个用于输出句向量，一个用于匹配做相似度计算，loss计算。

    bug:
        1. 当一轮训练里，loss都为0的时候， diff[diff.gt(0)] 会导致loss为NaN
        A.因为该写法会导致集合为空，取mean时出现除0异常

    关于triplet loss
        target也要放进训练文本中吧？刚就出现标准问不命中的问题。

更新：
    1.loss偶尔为Nan的bug修复
    2.改用triplet loss
    3.添加标准问作为训练数据，解决之前原文本不命中问题。
        添加前输入:密码修改 -> 移动密码修改
        添加后：密码修改 -> 密码修改