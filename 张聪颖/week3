import numpy as np
import tensorflow as tf
import Tokenizer
import pad_sequences

# 假设以下是文本数据
texts = ["这 是 一个 文本 示例", "这 是 另一个 示例", "一些 其他 文本"]

# 假设以下是对应的标签
labels = [0, 1, 0]  # 0 表示类别 A，1 表示类别 B

# 创建标记器（Tokenizer）并拟合文本数据
tokenizer = Tokenizer()
tokenizer.fit_on_texts(texts)

# 将文本转换为序列
sequences = tokenizer.texts_to_sequences(texts)

# 填充序列以保证输入是相同长度
maxlen = max([len(seq) for seq in sequences])
padded_sequences = pad_sequences(sequences, maxlen=maxlen)

# 构建 RNN 模型
model = tf.keras.Sequential([ # Embedding 层将输入序列中的每个整数转换为具有指定维度的向量
tf.keras.layers.Embedding(input_dim=len(tokenizer.word_index) + 1, output_dim=50, input_length=maxlen),# SimpleRNN 层用于处理序列数据
    tf.keras.layers.SimpleRNN(64),# Dense 层用于分类，使用 softmax 激活函数输出概率
    tf.keras.layers.Dense(2, activation='softmax')])

# 编译模型
model.compile(optimizer='adam',
loss='sparse_categorical_crossentropy', metrics=['accuracy'])

# 训练模型
model.fit(padded_sequences, np.array(labels), epochs=10)
